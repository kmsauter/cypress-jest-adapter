{
	"value assertions": {
		"toBeUndefined - pass": [
			{
				"actual": "undefined",
				"expected": "undefined",
				"Message": "expected undefined to be undefined",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toBeUndefined - fail": [
			{
				"actual": 5,
				"expected": "undefined",
				"Message": "expected 5 to be undefined",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toBeUndefined - not - pass": [
			{
				"actual": 5,
				"expected": "undefined",
				"Message": "expected 5 not to be undefined",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toBeUndefined - not - fail": [
			{
				"actual": "undefined",
				"expected": "undefined",
				"Message": "expected undefined not to be undefined",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toBeDefined - pass": [
			{
				"actual": 5,
				"expected": "undefined",
				"Message": "expected 5 to be defined",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toBeDefined - fail": [
			{
				"actual": "undefined",
				"expected": "undefined",
				"Message": "expected undefined to be defined",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toBeNull - pass": [
			{
				"actual": null,
				"expected": "undefined",
				"Message": "expected null to be null",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toBeNull - fail": [
			{
				"actual": 5,
				"expected": "undefined",
				"Message": "expected 5 to be null",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toBeNaN - pass": [
			{
				"actual": null,
				"expected": "undefined",
				"Message": "expected NaN to be NaN",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toBeNaN - fail": [
			{
				"actual": 5,
				"expected": "undefined",
				"Message": "expected 5 to be NaN",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toBeTruthy - pass": [
			{
				"actual": true,
				"expected": "undefined",
				"Message": "expected true to be truthy",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toBeTruthy - fail": [
			{
				"actual": false,
				"expected": "undefined",
				"Message": "expected false to be truthy",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toBeFalsy - pass": [
			{
				"actual": false,
				"expected": "undefined",
				"Message": "expected false to be falsy",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toBeFalsy - fail": [
			{
				"actual": 5,
				"expected": "undefined",
				"Message": "expected 5 to be falsy",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toEqual - pass": [
			{
				"actual": 11,
				"expected": 11,
				"Message": "expected 11 to equal 11",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toEqual - fail": [
			{
				"actual": 5,
				"expected": 11,
				"Message": "expected 5 to equal 11",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toEqual - not - pass": [
			{
				"actual": 5,
				"expected": 11,
				"Message": "expected 5 not to equal 11",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toEqual - not - fail": [
			{
				"actual": 11,
				"expected": 11,
				"Message": "expected 11 not to equal 11",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toStrictEqual - pass": [
			{
				"actual": 11,
				"expected": 11,
				"Message": "expected 11 to equal 11",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toStrictEqual - fail": [
			{
				"actual": 5,
				"expected": 11,
				"Message": "expected 5 to equal 11",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toBe - pass": [
			{
				"actual": 11,
				"expected": 11,
				"Message": "expected 11 to equal 11",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toBe - fail": [
			{
				"actual": 5,
				"expected": 11,
				"Message": "expected 5 to equal 11",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toContain - pass": [
			{
				"actual": [
					"a",
					"b",
					"c"
				],
				"expected": "b",
				"Message": "expected [ a, b, c ] to contain b",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toContain - fail": [
			{
				"actual": [
					"z",
					"y",
					"x"
				],
				"expected": "b",
				"Message": "expected [ z, y, x ] to contain b",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toContainEqual - pass": [
			{
				"actual": [
					{
						"a": 1
					},
					{
						"b": 1
					}
				],
				"expected": {
					"a": 1
				},
				"Message": "expected [ { a: 1 }, { b: 1 } ] to contain { a: 1 }",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toContainEqual - fail": [
			{
				"actual": [
					{
						"c": 1
					},
					{
						"d": 1
					}
				],
				"expected": {
					"a": 1
				},
				"Message": "expected [ { c: 1 }, { d: 1 } ] to contain { a: 1 }",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toBeCloseTo - pass": [
			{
				"actual": 0.3001,
				"expected": 0.3,
				"Message": "expected 0.3001 to be close to 0.3 +/- 0.001",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toBeCloseTo - fail": [
			{
				"actual": 0.5,
				"expected": 0.3,
				"Message": "expected 0.5 to be close to 0.3 +/- 0.001",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toBeGreaterThan - pass": [
			{
				"actual": 3,
				"expected": 2,
				"Message": "expected 3 to be greater than 2",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toBeGreaterThan - fail": [
			{
				"actual": 1,
				"expected": 2,
				"Message": "expected 1 to be greater than 2",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toBeGreaterThanOrEqual - pass": [
			{
				"actual": 3,
				"expected": 2,
				"Message": "expected 3 to be greater than or equal 2",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toBeGreaterThanOrEqual - fail": [
			{
				"actual": 1,
				"expected": 2,
				"Message": "expected 1 to be greater than or equal 2",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toBeLessThan - pass": [
			{
				"actual": 1,
				"expected": 2,
				"Message": "expected 1 to be less than 2",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toBeLessThan - fail": [
			{
				"actual": 3,
				"expected": 2,
				"Message": "expected 3 to be less than 2",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toBeLessThanOrEqual - pass": [
			{
				"actual": 1,
				"expected": 2,
				"Message": "expected 1 to be less than or equal 2",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toBeLessThanOrEqual - fail": [
			{
				"actual": 3,
				"expected": 2,
				"Message": "expected 3 to be less than or equal 2",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toBeInstanceOf - pass": [
			{
				"actual": "[Function actualPass]",
				"expected": "Function",
				"Message": "expected [Function: actualPass] to be an instance of Function",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toBeInstanceOf - fail": [
			{
				"actual": "hi",
				"expected": "Function",
				"Message": "expected hi to be an instance of Function",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toHaveLength - pass": [
			{
				"actual": "abc",
				"expected": 3,
				"Message": "expected abc to have length of 3",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toHaveLength - fail": [
			{
				"actual": "a",
				"expected": 3,
				"Message": "expected a to have length of 3",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toHaveProperty - pass": [
			{
				"actual": {
					"a": 1,
					"b": {
						"c": 2
					}
				},
				"expected": "b.c",
				"Message": "expected { a: 1, b: { c: 2 } } to have property b.c of 2",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toHaveProperty - fail": [
			{
				"actual": {
					"a": 1,
					"b": {
						"d": 2
					}
				},
				"expected": "b",
				"Message": "expected { a: 1, b: { d: 2 } } to have property b of 2",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toMatch - pass": [
			{
				"actual": "abcde",
				"expected": {},
				"Message": "expected abcde to match /bcd/",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toMatch - fail": [
			{
				"actual": "abde",
				"expected": {},
				"Message": "expected abde to match /bcd/",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toMatchObject - pass": [
			{
				"actual": {
					"a": 1,
					"b": "abcde"
				},
				"expected": {
					"a": 1,
					"b": "[AsymmetricMatcher StringMatching]"
				},
				"Message": "expected { a: 1, b: abcde } to match object { Object (a, b) }",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toMatchObject - fail": [
			{
				"actual": {
					"a": 1,
					"b": "zyx"
				},
				"expected": {
					"a": 1,
					"b": "[AsymmetricMatcher StringMatching]"
				},
				"Message": "expected { a: 1, b: zyx } to match object { Object (a, b) }",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toThrow - pass": [
			{
				"actual": "[Function actualPass]",
				"expected": "Pass",
				"Message": "expected function to throw error Pass",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toThrow - fail": [
			{
				"actual": "[Function actualFail]",
				"expected": "Pass",
				"Message": "expected function to throw error Pass",
				"state": "failed",
				"suite": "value assertions"
			}
		],
		"toThrow - not - pass": [
			{
				"actual": "[Function actualFail]",
				"expected": "Pass",
				"Message": "expected function not to throw error Pass",
				"state": "passed",
				"suite": "value assertions"
			}
		],
		"toThrow - not - fail": [
			{
				"actual": "[Function actualPass]",
				"expected": "Pass",
				"Message": "expected function not to throw error Pass",
				"state": "failed",
				"suite": "value assertions"
			}
		]
	},
	"resolves": {
		"resolves - pass": [
			{
				"actual": "abc",
				"expected": "abc",
				"Message": "expected abc to equal abc",
				"state": "passed",
				"suite": "resolves"
			}
		],
		"resolves - fail": [
			{
				"actual": "def",
				"expected": "abc",
				"Message": "expected def to equal abc",
				"state": "failed",
				"suite": "resolves"
			}
		],
		"resolves - not - pass": [
			{
				"actual": "def",
				"expected": "abc",
				"Message": "expected def not to equal abc",
				"state": "passed",
				"suite": "resolves"
			}
		],
		"resolves - not - fail": [
			{
				"actual": "abc",
				"expected": "abc",
				"Message": "expected abc not to equal abc",
				"state": "failed",
				"suite": "resolves"
			}
		],
		"resolves - async": [
			{
				"actual": "abc",
				"expected": "abc",
				"Message": "expected abc to equal abc",
				"state": "passed",
				"suite": "resolves"
			}
		],
		"rejects - pass": [
			{
				"actual": "[Function ]",
				"expected": "abc",
				"Message": "expected function to throw error abc",
				"state": "passed",
				"suite": "resolves"
			}
		],
		"rejects - fail": [
			{
				"actual": "[Function ]",
				"expected": "abc",
				"Message": "expected function to throw error abc",
				"state": "failed",
				"suite": "resolves"
			}
		],
		"rejects - not - pass": [
			{
				"actual": "[Function ]",
				"expected": "abc",
				"Message": "expected function not to throw error abc",
				"state": "passed",
				"suite": "resolves"
			}
		],
		"rejects - not - fail": [
			{
				"actual": "[Function ]",
				"expected": "abc",
				"Message": "expected function not to throw error abc",
				"state": "failed",
				"suite": "resolves"
			}
		],
		"rejects - async": [
			{
				"actual": "[Function ]",
				"expected": "abc",
				"Message": "expected function to throw error abc",
				"state": "passed",
				"suite": "resolves"
			}
		]
	},
	"mock assertions": {
		"toHaveBeenCalled - pass": [
			{
				"actual": "[Spy - spy#0]",
				"expected": "undefined",
				"Message": "expected spy to have been called at least once",
				"state": "passed",
				"suite": "mock assertions"
			}
		],
		"toHaveBeenCalled - fail": [
			{
				"actual": "[Spy - spy#1]",
				"expected": "undefined",
				"Message": "expected spy to have been called at least once, but it was never called",
				"state": "failed",
				"suite": "mock assertions"
			}
		],
		"toHaveBeenCalled - not - pass": [
			{
				"actual": "[Spy - spy#2]",
				"expected": "undefined",
				"Message": "expected spy to not have been called at least once",
				"state": "passed",
				"suite": "mock assertions"
			}
		],
		"toHaveBeenCalled - not - fail": [
			{
				"actual": "[Spy - spy#3]",
				"expected": "undefined",
				"Message": "expected spy to not have been called at least once",
				"state": "failed",
				"suite": "mock assertions"
			}
		],
		"toHaveReturned - pass": [
			{
				"actual": "[Spy - spy#4]",
				"expected": "undefined",
				"Message": "expected spy to have returned at least once",
				"state": "passed",
				"suite": "mock assertions"
			}
		],
		"toHaveReturned - fail": [
			{
				"actual": "[Spy - spy#5]",
				"expected": "undefined",
				"Message": "expected spy to have returned at least once",
				"state": "failed",
				"suite": "mock assertions"
			}
		],
		"toHaveBeenCalledTimes - pass": [
			{
				"actual": "[Spy - spy#6]",
				"expected": "undefined",
				"Message": "expected spy to have been called exactly \"twice\"",
				"state": "passed",
				"suite": "mock assertions"
			}
		],
		"toHaveBeenCalledTimes - fail": [
			{
				"actual": "[Spy - spy#7]",
				"expected": "undefined",
				"Message": "expected spy to have been called exactly \"twice\", but it was called once\n\n    The following calls were made:\n\n    spy(undefined) at spy (http://localhost:3000/__cypress/runner/cypress_runner.js:64452:22)",
				"state": "failed",
				"suite": "mock assertions"
			}
		],
		"toHaveReturnedTimes - pass": [
			{
				"actual": "[Spy - spy#8]",
				"expected": 2,
				"Message": "expected spy to have returned 2 times",
				"state": "passed",
				"suite": "mock assertions"
			}
		],
		"toHaveReturnedTimes - fail": [
			{
				"actual": "[Spy - spy#9]",
				"expected": 2,
				"Message": "expected spy to have returned 2 times",
				"state": "failed",
				"suite": "mock assertions"
			}
		],
		"toHaveReturnedTimes - not - pass": [
			{
				"actual": "[Spy - spy#10]",
				"expected": 2,
				"Message": "expected spy not to have returned 2 times",
				"state": "passed",
				"suite": "mock assertions"
			}
		],
		"toHaveReturnedTimes - not - fail": [
			{
				"actual": "[Spy - spy#11]",
				"expected": 2,
				"Message": "expected spy not to have returned 2 times",
				"state": "failed",
				"suite": "mock assertions"
			}
		],
		"toHaveBeenCalledWith - pass": [
			{
				"actual": "[Spy - spy#12]",
				"expected": [
					"abc"
				],
				"Message": "expected spy to have been called with arguments [ abc ] at least once",
				"state": "passed",
				"suite": "mock assertions"
			}
		],
		"toHaveBeenCalledWith - fail": [
			{
				"actual": "[Spy - spy#13]",
				"expected": [
					"abc"
				],
				"Message": "expected spy to have been called with arguments [ abc ] at least once",
				"state": "failed",
				"suite": "mock assertions"
			}
		],
		"toHaveBeenCalledWith - not - pass": [
			{
				"actual": "[Spy - spy#14]",
				"expected": [
					"abc"
				],
				"Message": "expected spy not to have been called with arguments [ abc ]",
				"state": "passed",
				"suite": "mock assertions"
			}
		],
		"toHaveBeenCalledWith - not - fail": [
			{
				"actual": "[Spy - spy#15]",
				"expected": [
					"abc"
				],
				"Message": "expected spy not to have been called with arguments [ abc ]",
				"state": "failed",
				"suite": "mock assertions"
			}
		],
		"toHaveReturnedWith - pass": [
			{
				"actual": "[Spy - spy#16]",
				"expected": "abc",
				"Message": "expected spy to have returned abc at least once",
				"state": "passed",
				"suite": "mock assertions"
			}
		],
		"toHaveReturnedWith - fail": [
			{
				"actual": "[Spy - spy#17]",
				"expected": "abc",
				"Message": "expected spy to have returned abc at least once",
				"state": "failed",
				"suite": "mock assertions"
			}
		],
		"toHaveLastReturnedWith - pass": [
			{
				"actual": "[Spy - spy#18]",
				"expected": "abc",
				"Message": "expected last spy to have returned abc, actual [abc]",
				"state": "passed",
				"suite": "mock assertions"
			}
		],
		"toHaveLastReturnedWith - fail": [
			{
				"actual": "[Spy - spy#19]",
				"expected": "abc",
				"Message": "expected last spy to have returned abc, actual [def]",
				"state": "failed",
				"suite": "mock assertions"
			}
		],
		"toHaveBeenNthCalledWith - pass": [
			{
				"actual": "[Spy - spy#20]",
				"expected": [
					"123"
				],
				"Message": "expected spy 2 to have been called with arguments [ 123 ], actual [123]",
				"state": "passed",
				"suite": "mock assertions"
			}
		],
		"toHaveBeenNthCalledWith - fail": [
			{
				"actual": "[Spy - spy#21]",
				"expected": [
					"123"
				],
				"Message": "expected spy 2 to have been called with arguments [ 123 ], actual [1234]",
				"state": "failed",
				"suite": "mock assertions"
			}
		],
		"toHaveNthReturnedWith - pass": [
			{
				"actual": "[Spy - spy#22]",
				"expected": "123",
				"Message": "expected spy 2 to have returned 123, actual [123]",
				"state": "passed",
				"suite": "mock assertions"
			}
		],
		"toHaveNthReturnedWith - fail": [
			{
				"actual": "[Spy - spy#23]",
				"expected": "123",
				"Message": "expected spy 2 to have returned 123, actual [1234]",
				"state": "failed",
				"suite": "mock assertions"
			}
		]
	},
	"asymmetric matchers": {
		"any - pass": [
			{
				"actual": {
					"a": "[Function a]",
					"b": 2
				},
				"expected": {
					"a": "[AsymmetricMatcher Any]",
					"b": 2
				},
				"Message": "expected { a: [Function: a], b: 2 } to equal { Object (a, b) }",
				"state": "passed",
				"suite": "asymmetric matchers"
			}
		],
		"any - fail": [
			{
				"actual": {
					"a": 5,
					"b": 2
				},
				"expected": {
					"a": "[AsymmetricMatcher Any]",
					"b": 2
				},
				"Message": "expected { a: 5, b: 2 } to equal { Object (a, b) }",
				"state": "failed",
				"suite": "asymmetric matchers"
			}
		],
		"any - pass - not": [
			{
				"actual": {
					"a": "[Function a]",
					"b": 2
				},
				"expected": {
					"a": "[AsymmetricMatcher Any]",
					"b": 2
				},
				"Message": "expected { a: [Function: a], b: 2 } not to equal { Object (a, b) }",
				"state": "passed",
				"suite": "asymmetric matchers"
			}
		],
		"anything - pass": [
			{
				"actual": {
					"a": "[Function a]",
					"b": 2
				},
				"expected": {
					"a": "[AsymmetricMatcher Any]",
					"b": 2
				},
				"Message": "expected { a: [Function: a], b: 2 } to equal { Object (a, b) }",
				"state": "passed",
				"suite": "asymmetric matchers"
			}
		],
		"anything - fail": [
			{
				"actual": {
					"a": 5,
					"b": 2
				},
				"expected": {
					"a": "[AsymmetricMatcher Any]",
					"b": 2
				},
				"Message": "expected { a: 5, b: 2 } to equal { Object (a, b) }",
				"state": "failed",
				"suite": "asymmetric matchers"
			}
		],
		"anything - pass - not": [
			{
				"actual": {
					"a": "[Function a]",
					"b": 2
				},
				"expected": {
					"a": "[AsymmetricMatcher Any]",
					"b": 2
				},
				"Message": "expected { a: [Function: a], b: 2 } not to equal { Object (a, b) }",
				"state": "passed",
				"suite": "asymmetric matchers"
			}
		],
		"arrayContaining - pass": [
			{
				"actual": [
					1,
					2,
					3
				],
				"expected": "Array Containing [2,3]",
				"Message": "expected [ 1, 2, 3 ] to equal Array Containing [2,3]",
				"state": "passed",
				"suite": "asymmetric matchers"
			}
		],
		"arrayContaining - fail": [
			{
				"actual": [
					3,
					4,
					5
				],
				"expected": "Array Containing [2,3]",
				"Message": "expected [ 3, 4, 5 ] to equal Array Containing [2,3]",
				"state": "failed",
				"suite": "asymmetric matchers"
			}
		],
		"arrayContaining - not - pass": [
			{
				"actual": [
					3,
					4,
					5
				],
				"expected": "Array Containing [2,3]",
				"Message": "expected [ 3, 4, 5 ] not to equal Array Containing [2,3]",
				"state": "passed",
				"suite": "asymmetric matchers"
			}
		],
		"objectContaining - pass": [
			{
				"actual": {
					"a": 1,
					"b": 2,
					"c": 3
				},
				"expected": "Object Containing {{\"a\":1,\"b\":2}}",
				"Message": "expected { a: 1, b: 2, c: 3 } to equal Object Containing {{\"a\":1,\"b\":2}}",
				"state": "passed",
				"suite": "asymmetric matchers"
			}
		],
		"objectContaining - fail": [
			{
				"actual": {
					"a": 0,
					"b": 1,
					"c": 3
				},
				"expected": "Object Containing {{\"a\":1,\"b\":2}}",
				"Message": "expected { a: 0, b: 1, c: 3 } to equal Object Containing {{\"a\":1,\"b\":2}}",
				"state": "failed",
				"suite": "asymmetric matchers"
			}
		],
		"objectContaining - not - pass": [
			{
				"actual": {
					"a": 0,
					"b": 1,
					"c": 3
				},
				"expected": "Object Containing {{\"a\":1,\"b\":2}}",
				"Message": "expected { a: 0, b: 1, c: 3 } not to equal Object Containing {{\"a\":1,\"b\":2}}",
				"state": "passed",
				"suite": "asymmetric matchers"
			}
		],
		"stringContaining - pass": [
			{
				"actual": "abcde",
				"expected": "String Containing abc",
				"Message": "expected abcde to equal String Containing abc",
				"state": "passed",
				"suite": "asymmetric matchers"
			}
		],
		"stringContaining - fail": [
			{
				"actual": "jkllm",
				"expected": "String Containing abc",
				"Message": "expected jkllm to equal String Containing abc",
				"state": "failed",
				"suite": "asymmetric matchers"
			}
		],
		"stringContaining - not - pass": [
			{
				"actual": "jkllm",
				"expected": "String Containing abc",
				"Message": "expected jkllm not to equal String Containing abc",
				"state": "passed",
				"suite": "asymmetric matchers"
			}
		],
		"stringMatching - pass": [
			{
				"actual": "abcde",
				"expected": "String Matching /abc/i",
				"Message": "expected abcde to equal String Matching /abc/i",
				"state": "passed",
				"suite": "asymmetric matchers"
			}
		],
		"stringMatching - fail": [
			{
				"actual": "jkllm",
				"expected": "String Matching /abc/i",
				"Message": "expected jkllm to equal String Matching /abc/i",
				"state": "failed",
				"suite": "asymmetric matchers"
			}
		],
		"stringMatching - not - pass": [
			{
				"actual": "jkllm",
				"expected": "String Matching /abc/i",
				"Message": "expected jkllm not to equal String Matching /abc/i",
				"state": "passed",
				"suite": "asymmetric matchers"
			}
		]
	},
	"jquery assertions": {
		"toExist - pass": [
			{
				"Message": "expected <h2#test-1.class-1> to exist in the DOM",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toExist - fail": [
			{
				"Message": "expected { Object (length, prevObject, ...) } to exist in the DOM",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toExist - not - pass": [
			{
				"Message": "expected { Object (length, prevObject, ...) } not to exist in the DOM",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toExist - not - fail": [
			{
				"Message": "expected <h2#test-1.class-1> not to exist in the DOM",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toBeVisible - pass": [
			{
				"Message": "expected <h2#test-1.class-1> to be visible",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toBeVisible - fail": [
			{
				"Message": "expected { Object (length, prevObject, ...) } to be visible",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toBeChecked - pass": [
			{
				"Message": "expected <input#checkbox-1> to be checked",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toBeChecked - fail": [
			{
				"Message": "expected <input#checkbox-2> to be checked",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toHaveId - pass": [
			{
				"Message": "expected <h2#test-1.class-1> to have id test-1",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toHaveId - fail": [
			{
				"Message": "expected <h3> to have id test-1",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toHaveClass - pass": [
			{
				"Message": "expected <h2#test-1.class-1> to have class class-1",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toHaveClass - fail": [
			{
				"Message": "expected <h3> to have class class-1",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toHaveHtml - pass": [
			{
				"Message": "expected <h2#test-1.class-1> to have HTML Test 1",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toHaveHtml - fail": [
			{
				"Message": "expected <h3> to have HTML Test 1",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toHaveText - pass": [
			{
				"Message": "expected <h2#test-1.class-1> to have text Test 1",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toHaveText - fail": [
			{
				"Message": "expected <h3> to have text Test 1",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toContainText - pass": [
			{
				"Message": "expected <h2#test-1.class-1> to contain Test 1",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toContainText - fail": [
			{
				"Message": "expected <h3> to contain Test 1",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toHaveValue - pass": [
			{
				"Message": "expected <input#checkbox-1> to have value value-1",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toHaveValue - fail": [
			{
				"Message": "expected <input#checkbox-2> to have value value-1",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toHaveAttr - pass": [
			{
				"Message": "expected <h2#test-1.class-1> to have attribute id",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toHaveAttr - fail": [
			{
				"Message": "expected <h3> to have attribute id",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toHaveAttr - not - pass": [
			{
				"Message": "expected <h3> not to have attribute id",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toHaveAttr - not - fail": [
			{
				"Message": "expected <h2#test-1.class-1> not to have attribute id",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toHaveData - pass": [
			{
				"Message": "expected <h2#test-1.class-1> to have data test with the value test",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toHaveData - fail": [
			{
				"Message": "expected <h3> to have data test with the value test",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toHaveTag - pass": [
			{
				"Message": "expected <h2#test-1.class-1> to have tag h2",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toHaveTag - fail": [
			{
				"Message": "expected <h3> to have tag h2",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toBeHidden - pass": [
			{
				"Message": "expected <div#div-1> to be hidden",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toBeHidden - fail": [
			{
				"Message": "expected <h3> to be hidden",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toBeEmpty - pass": [
			{
				"Message": "expected <div#div-1> to be empty",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toBeEmpty - fail": [
			{
				"Message": "expected <h3> to be empty",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toBeDisabled - pass": [
			{
				"Message": "expected <input#text-1> to be disabled",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toBeDisabled - fail": [
			{
				"Message": "expected <h3> to be disabled",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toBeEnabled - pass": [
			{
				"Message": "expected <h3> to be enabled",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toBeEnabled - fail": [
			{
				"Message": "expected <input#text-1> to be enabled",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toBeSelected - pass": [
			{
				"Message": "expected <option> to be selected",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toBeSelected - fail": [
			{
				"Message": "expected <option> to be selected",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toBeFocused - pass": [
			{
				"Message": "expected <input#text-2> to be focused",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toBeFocused - fail": [
			{
				"Message": "expected <input#text-1> to be focused",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toHaveCss - pass": [
			{
				"Message": "expected <div#div-1> to have CSS property [object Object]",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toHaveCss - fail": [
			{
				"Message": "expected <h2#test-1.class-1> to have CSS property [object Object]",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toHaveProp - pass": [
			{
				"Message": "expected <input#text-1> to have property disabled",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toHaveProp - fail": [
			{
				"Message": "expected <h2#test-1.class-1> to have property disabled",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toHaveQuantity - pass": [
			{
				"Message": "expected [ <input#checkbox-1>, 3 more... ] to have length 4",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toHaveQuantity - fail": [
			{
				"Message": "expected <h2#test-1.class-1> to have length 4",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toHaveDescendant - pass": [
			{
				"Message": "expected <select> to have descendants > option",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toHaveDescendant - fail": [
			{
				"Message": "expected <h2#test-1.class-1> to have descendants > option",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toHaveDescendantWithText - pass": [
			{
				"Message": "expected <select> to have descendants > option with text A",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toHaveDescendantWithText - fail": [
			{
				"Message": "expected <h2#test-1.class-1> to have descendants > option with text A",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toBeMatchedBy - pass": [
			{
				"Message": "expected <div#div-1> to match div",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toBeMatchedBy - fail": [
			{
				"Message": "expected <h2#test-1.class-1> to match div",
				"state": "failed",
				"suite": "jquery assertions"
			}
		],
		"toBeMatchedBy - not - pass": [
			{
				"Message": "expected <h2#test-1.class-1> not to match div",
				"state": "passed",
				"suite": "jquery assertions"
			}
		],
		"toBeMatchedBy - not - fail": [
			{
				"Message": "expected <div#div-1> not to match div",
				"state": "failed",
				"suite": "jquery assertions"
			}
		]
	}
}